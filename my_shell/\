#include "try.h"
void main(void)
{
	/*get_pid();*/
	fork_process();
/*	return (0);*/
}


void get_pid(void)
{
	pid_t current_pid, current_ppid;

	current_ppid = getppid();
	current_pid = getpid();
/*	write(1, &current_pid, strlen((const char *__s)(current_pid)));*/
	printf("The current pid is: %u\n", current_pid);
	printf("PARENT PID IS: %u\n\n", current_ppid);
}

int fork_process(void)
{
	pid_t pid;
	/*fork_on =*/pid = fork();

	if (pid == -1)
	{
		printf("UNSUCCESSFUL FORKING ,try again\n\n");
	/*	return (1);*/
	}
	else if (pid == 0)
	{
		sleep(12);
		printf("CHILD IS AROUND\n");
	/*	return (0);	*/
	}
	else 
		printf("PARENT EXECUTED FIRST\n");
		return (0);
}
